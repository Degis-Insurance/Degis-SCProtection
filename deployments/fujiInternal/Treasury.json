{
  "address": "0x02B8BEfFD044d666A156b274bF8E0c3A0c08e362",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_shield",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_executor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "reporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReporterRewarded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "REPORTER_REWARD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolIncome",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "premiumIncome",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_poolId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_reporter",
          "type": "address"
        }
      ],
      "name": "rewardReporter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shield",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x06449cb918b23d3519fd86b7be520422a856e8824657762068227a518a239664",
  "receipt": {
    "to": null,
    "from": "0x1Be1A151BA3D24F594ee971dc9B843F23b5bA80E",
    "contractAddress": "0x02B8BEfFD044d666A156b274bF8E0c3A0c08e362",
    "transactionIndex": 0,
    "gasUsed": "366559",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2b608a55b9f2f8fc5d08192754e918908cf8322cb44ea3f05fae05c4fdb0db79",
    "transactionHash": "0x06449cb918b23d3519fd86b7be520422a856e8824657762068227a518a239664",
    "logs": [],
    "blockNumber": 13214623,
    "cumulativeGasUsed": "366559",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x62494723BD679476E4a11d243B832dA918d0F79F",
    "0x506392283d5b4C7754b3B0c07eE9313e90645b3a"
  ],
  "numDeployments": 5,
  "solcInputHash": "014ec466cdfeca04e202ae583a8afb99",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_shield\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_executor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReporterRewarded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REPORTER_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"premiumIncome\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_poolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"}],\"name\":\"rewardReporter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shield\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claim(uint256)\":{\"params\":{\"_amount\":\"Amount to claim\"}},\"premiumIncome(uint256,uint256)\":{\"params\":{\"_amount\":\"Premium amount (shield)\",\"_poolId\":\"Pool id\"}},\"rewardReporter(uint256,address)\":{\"params\":{\"_poolId\":\"Pool id\",\"_reporter\":\"Reporter address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256)\":{\"notice\":\"Claim shield by the owner\"},\"premiumIncome(uint256,uint256)\":{\"notice\":\"Record when receiving new premium income\"},\"rewardReporter(uint256,address)\":{\"notice\":\"Reward the correct reporter         Part of the priority pool income will be given to the reporter         Only called from executor when executing a report\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/pools/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363632343437383531343736\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/interfaces/IShield.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"../pools/SimpleIERC20.sol\\\";\\n\\ninterface IShield is SimpleIERC20 {\\n    function deposit(\\n        uint256 _type,\\n        address _stablecoin,\\n        uint256 _amount,\\n        uint256 _minAmount\\n    ) external;\\n}\\n\",\"keccak256\":\"0x22e4fc4218ad0df35d3a7c982296a7fdae6c502d5cf77a7e8d26155e7061cbe1\",\"license\":\"GPL-3.0-or-later\"},\"src/pools/SimpleIERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.13;\\n\\ninterface SimpleIERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    function transferFrom(address from, address to, uint256 amount) external returns(bool);\\n}\\n\",\"keccak256\":\"0x93ccdbce4fcd2d86096e6ad8b10a06757d600a70a4eb660281238a4ef1d6be7f\",\"license\":\"MIT\"},\"src/pools/Treasury.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"../interfaces/IShield.sol\\\";\\n\\ncontract Treasury {\\n    address public owner;\\n\\n    address public executor;\\n\\n    address public shield;\\n\\n    uint256 public constant REPORTER_REWARD = 1000;\\n\\n    mapping(uint256 => uint256) public poolIncome;\\n\\n    event ReporterRewarded(address reporter, uint256 amount);\\n\\n    constructor(address _shield, address _executor) {\\n        executor = _executor;\\n        shield = _shield;\\n        owner = msg.sender;\\n    }\\n\\n    /**\\n     * @notice Reward the correct reporter\\n     *         Part of the priority pool income will be given to the reporter\\n     *         Only called from executor when executing a report\\n     *\\n     * @param _poolId   Pool id\\n     * @param _reporter Reporter address\\n     */\\n    function rewardReporter(uint256 _poolId, address _reporter) external {\\n        require(msg.sender == executor, \\\"Only executor\\\");\\n\\n        uint256 amount = (poolIncome[_poolId] * REPORTER_REWARD) / 10000;\\n\\n        poolIncome[_poolId] -= amount;\\n        SimpleIERC20(shield).transfer(_reporter, amount);\\n\\n        emit ReporterRewarded(_reporter, amount);\\n    }\\n\\n    /**\\n     * @notice Record when receiving new premium income\\n     *\\n     * @param _poolId Pool id\\n     * @param _amount Premium amount (shield)\\n     */\\n    function premiumIncome(uint256 _poolId, uint256 _amount) external {\\n        poolIncome[_poolId] += _amount;\\n    }\\n\\n    /**\\n     * @notice Claim shield by the owner\\n     *\\n     * @param _amount Amount to claim\\n     */\\n    function claim(uint256 _amount) external {\\n        require(msg.sender == owner, \\\"Only owner\\\");\\n\\n        SimpleIERC20(shield).transfer(owner, _amount);\\n    }\\n}\\n\",\"keccak256\":\"0xd0bddb4264156caec32070adc2206fcd6b6b689b356096fc94275ce31c99a97b\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60803461009557601f61052b38819003918201601f19168301916001600160401b0383118484101761009a578084926040948552833981010312610095576020610048826100b0565b916001600160a01b0391829161005e91016100b0565b169160018060a01b031992836001541617600155168160025416176002553390600054161760005560405161046690816100c58239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100955756fe608060408181526004918236101561001657600080fd5b600092833560e01c9182630627c88b1461026657508163379607f5146101895781635b97d3671461014257816370d39cff146101195781638da5cb5b146100f1578163c34c08e5146100c8578163d5647cc71461009c575063fd1238061461007d57600080fd5b34610098578160031936011261009857602090516103e88152f35b5080fd5b9050346100c45760203660031901126100c45760209282913581526003845220549051908152f35b8280fd5b50503461009857816003193601126100985760015490516001600160a01b039091168152602090f35b505034610098578160031936011261009857905490516001600160a01b039091168152602090f35b50503461009857816003193601126100985760025490516001600160a01b039091168152602090f35b9050346100c457816003193601126100c4576024358135845260036020528284209182549082198211610176575001905551f35b634e487b7160e01b865260119052602485fd5b9050346100c45760203660031901126100c45782546001600160a01b03908116903382900361023657600254845163a9059cbb60e01b81526001600160a01b0393909316848401908152933560208086019190915292938492908390036040019183918891165af1801561022a576101ff575051f35b61021f9060203d8111610223575b61021781836103db565b810190610413565b5051f35b503d61020d565b505051903d90823e3d90fd5b835162461bcd60e51b8152602081850152600a60248201526927b7363c9037bbb732b960b11b6044820152606490fd5b838591346100c457816003193601126100c457833590602435906001600160a01b039081831683036103d757816001541633036103a657508285526003602052838520546103e8908060001904821181151516610393579061271091020492855260036020528385208054848110610393578490039055600254845163a9059cbb60e01b81526001600160a01b038416978101978852602088810186905296979596909590928692169082908990829060400103925af1928315610389577fc8ae12e13c66cfdc817755aaebcef528a42f8e59ac8ece9bc1e61625f752094d9361036b575b5083516001600160a01b039190911681526020810191909152604090a151f35b6103829060203d81116102235761021781836103db565b508561034b565b84513d87823e3d90fd5b634e487b7160e01b875260118852602487fd5b62461bcd60e51b8152602087820152600d60248201526c27b7363c9032bc32b1baba37b960991b6044820152606490fd5b8580fd5b90601f8019910116810190811067ffffffffffffffff8211176103fd57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261042b5751801515810361042b5790565b600080fdfea2646970667358221220feeb104efab3556042c3db7a7077efd755ec9f4873c3db3c81c1f075285c9b2c64736f6c634300080f0033",
  "deployedBytecode": "0x608060408181526004918236101561001657600080fd5b600092833560e01c9182630627c88b1461026657508163379607f5146101895781635b97d3671461014257816370d39cff146101195781638da5cb5b146100f1578163c34c08e5146100c8578163d5647cc71461009c575063fd1238061461007d57600080fd5b34610098578160031936011261009857602090516103e88152f35b5080fd5b9050346100c45760203660031901126100c45760209282913581526003845220549051908152f35b8280fd5b50503461009857816003193601126100985760015490516001600160a01b039091168152602090f35b505034610098578160031936011261009857905490516001600160a01b039091168152602090f35b50503461009857816003193601126100985760025490516001600160a01b039091168152602090f35b9050346100c457816003193601126100c4576024358135845260036020528284209182549082198211610176575001905551f35b634e487b7160e01b865260119052602485fd5b9050346100c45760203660031901126100c45782546001600160a01b03908116903382900361023657600254845163a9059cbb60e01b81526001600160a01b0393909316848401908152933560208086019190915292938492908390036040019183918891165af1801561022a576101ff575051f35b61021f9060203d8111610223575b61021781836103db565b810190610413565b5051f35b503d61020d565b505051903d90823e3d90fd5b835162461bcd60e51b8152602081850152600a60248201526927b7363c9037bbb732b960b11b6044820152606490fd5b838591346100c457816003193601126100c457833590602435906001600160a01b039081831683036103d757816001541633036103a657508285526003602052838520546103e8908060001904821181151516610393579061271091020492855260036020528385208054848110610393578490039055600254845163a9059cbb60e01b81526001600160a01b038416978101978852602088810186905296979596909590928692169082908990829060400103925af1928315610389577fc8ae12e13c66cfdc817755aaebcef528a42f8e59ac8ece9bc1e61625f752094d9361036b575b5083516001600160a01b039190911681526020810191909152604090a151f35b6103829060203d81116102235761021781836103db565b508561034b565b84513d87823e3d90fd5b634e487b7160e01b875260118852602487fd5b62461bcd60e51b8152602087820152600d60248201526c27b7363c9032bc32b1baba37b960991b6044820152606490fd5b8580fd5b90601f8019910116810190811067ffffffffffffffff8211176103fd57604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261042b5751801515810361042b5790565b600080fdfea2646970667358221220feeb104efab3556042c3db7a7077efd755ec9f4873c3db3c81c1f075285c9b2c64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "claim(uint256)": {
        "params": {
          "_amount": "Amount to claim"
        }
      },
      "premiumIncome(uint256,uint256)": {
        "params": {
          "_amount": "Premium amount (shield)",
          "_poolId": "Pool id"
        }
      },
      "rewardReporter(uint256,address)": {
        "params": {
          "_poolId": "Pool id",
          "_reporter": "Reporter address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256)": {
        "notice": "Claim shield by the owner"
      },
      "premiumIncome(uint256,uint256)": {
        "notice": "Record when receiving new premium income"
      },
      "rewardReporter(uint256,address)": {
        "notice": "Reward the correct reporter         Part of the priority pool income will be given to the reporter         Only called from executor when executing a report"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16957,
        "contract": "src/pools/Treasury.sol:Treasury",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 16959,
        "contract": "src/pools/Treasury.sol:Treasury",
        "label": "executor",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 16961,
        "contract": "src/pools/Treasury.sol:Treasury",
        "label": "shield",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 16968,
        "contract": "src/pools/Treasury.sol:Treasury",
        "label": "poolIncome",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}