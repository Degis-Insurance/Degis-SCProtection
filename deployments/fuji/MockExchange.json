{
  "address": "0x4909a15bd6fB697206e74D87579836B4EDCdB98E",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf3cc9f0baf8f1515e037603c25e5d5c9f1dd9895a2a7d407154529ad47a5de68",
  "receipt": {
    "to": null,
    "from": "0x1Be1A151BA3D24F594ee971dc9B843F23b5bA80E",
    "contractAddress": "0x4909a15bd6fB697206e74D87579836B4EDCdB98E",
    "transactionIndex": 0,
    "gasUsed": "244847",
    "logsBloom": "0x
    "blockHash": "0x81dcc6c19b1b20aa0f9c2eaff62a9579bd47378bc0f89a05364d45cf60006a6c",
    "transactionHash": "0xf3cc9f0baf8f1515e037603c25e5d5c9f1dd9895a2a7d407154529ad47a5de68",
    "logs": [],
    "blockNumber": 13166492,
    "cumulativeGasUsed": "244847",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "3ec71b30c325f104d8ef6c9e1b369bf4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mock/MockExchange.sol\":\"MockExchange\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363632333038353133333934\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"src/mock/MockExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IERC20Decimals {\\n    function decimals() external view returns (uint8);\\n}\\n\\ncontract MockExchange {\\n    constructor() {}\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountOut) {\\n        require(block.timestamp <= deadline);\\n\\n        IERC20(path[0]).transferFrom(msg.sender, address(this), amountIn);\\n\\n        uint256 decimalDiff = IERC20Decimals(path[0]).decimals() -\\n            IERC20Decimals(path[1]).decimals();\\n\\n        amountOut = amountIn * 10**decimalDiff;\\n\\n        IERC20(path[1]).transfer(to, amountOut);\\n    }\\n}\\n\",\"keccak256\":\"0xad00ed1409292de4a75415ef4f5bc75b4999f289fbac5cbc6b558bf458c92c04\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080806040523461001657610376908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b6000803560e01c6338ed17391461002c57600080fd5b346102bb5760a03660031901126102bb5782359060443567ffffffffffffffff948582116102b757366023830112156102b757818101359586116102b7576024938483019036868960051b860101116102b3576001600160a01b03606435818116959193908690036102af5760843542116102af578915610256578a846100b2836102be565b166323b872dd60e01b82523387830152308a83015284604483015260209c8d91818b5a92606493f1801561028757918c6100f4928794610291575b50506102be565b16908851998b8b878163313ce56760e01b968782525afa9a8b1561028757889b610268575b506001101561025657604401988a846101318c6102be565b1692868b518095819382525afa91821561024c578792610218575b5060ff9182169116818110610206570360ff16604d81116101f457600a0a9080600019048211811515166101f45760449261018d8b9695938893029a6102be565b16898951988996879563a9059cbb60e01b87528601528401525af19081156101e957506101bc575b5051908152f35b6101db90843d86116101e2575b6101d381836102d7565b81019061030f565b50386101b5565b503d6101c9565b8351903d90823e3d90fd5b634e487b7160e01b8652601184528686fd5b634e487b7160e01b8752601185528787fd5b60ff91925061023d82918d803d10610245575b61023581836102d7565b810190610327565b92915061014c565b503d61022b565b89513d89823e3d90fd5b634e487b7160e01b8752603285528787fd5b610280919b508c8d3d106102455761023581836102d7565b9938610119565b8a513d8a823e3d90fd5b816102a792903d106101e2576101d381836102d7565b508c386100ed565b8680fd5b8480fd5b8280fd5b80fd5b356001600160a01b03811681036102d25790565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176102f957604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126102d2575180151581036102d25790565b908160209103126102d2575160ff811681036102d2579056fea26469706673582212206421b76cd94c769475b441bf612c112f96a9e2aa3f161598d4c8aec8be5c6d0964736f6c634300080f0033",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b6000803560e01c6338ed17391461002c57600080fd5b346102bb5760a03660031901126102bb5782359060443567ffffffffffffffff948582116102b757366023830112156102b757818101359586116102b7576024938483019036868960051b860101116102b3576001600160a01b03606435818116959193908690036102af5760843542116102af578915610256578a846100b2836102be565b166323b872dd60e01b82523387830152308a83015284604483015260209c8d91818b5a92606493f1801561028757918c6100f4928794610291575b50506102be565b16908851998b8b878163313ce56760e01b968782525afa9a8b1561028757889b610268575b506001101561025657604401988a846101318c6102be565b1692868b518095819382525afa91821561024c578792610218575b5060ff9182169116818110610206570360ff16604d81116101f457600a0a9080600019048211811515166101f45760449261018d8b9695938893029a6102be565b16898951988996879563a9059cbb60e01b87528601528401525af19081156101e957506101bc575b5051908152f35b6101db90843d86116101e2575b6101d381836102d7565b81019061030f565b50386101b5565b503d6101c9565b8351903d90823e3d90fd5b634e487b7160e01b8652601184528686fd5b634e487b7160e01b8752601185528787fd5b60ff91925061023d82918d803d10610245575b61023581836102d7565b810190610327565b92915061014c565b503d61022b565b89513d89823e3d90fd5b634e487b7160e01b8752603285528787fd5b610280919b508c8d3d106102455761023581836102d7565b9938610119565b8a513d8a823e3d90fd5b816102a792903d106101e2576101d381836102d7565b508c386100ed565b8680fd5b8480fd5b8280fd5b80fd5b356001600160a01b03811681036102d25790565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176102f957604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126102d2575180151581036102d25790565b908160209103126102d2575160ff811681036102d2579056fea26469706673582212206421b76cd94c769475b441bf612c112f96a9e2aa3f161598d4c8aec8be5c6d0964736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}