{
  "address": "0x660A339Eb163dBB1BA6521A2699ec9626B72F4F0",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveOut",
          "type": "uint256"
        }
      ],
      "name": "getAmountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMax",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x39226d457a0379020b4ac9217d90153cf3fc2f39a2865f82ab1844000d6f1dcb",
  "receipt": {
    "to": null,
    "from": "0x1Be1A151BA3D24F594ee971dc9B843F23b5bA80E",
    "contractAddress": "0x660A339Eb163dBB1BA6521A2699ec9626B72F4F0",
    "transactionIndex": 0,
    "gasUsed": "417881",
    "logsBloom": "0x
    "blockHash": "0x2833374287b6c3fea1e91ed7eeda32fe37cf295ed052805cfe9d291d0ef6cadb",
    "transactionHash": "0x39226d457a0379020b4ac9217d90153cf3fc2f39a2865f82ab1844000d6f1dcb",
    "logs": [],
    "blockNumber": 12300170,
    "cumulativeGasUsed": "417881",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d90ecb1c88e931ac1edfc4a8a4e5491d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mock/MockExchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363539383836343736303334\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"src/mock/MockExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract Exchange {\\n    string public name;\\n\\n    constructor() {\\n        name = \\\"exchange\\\";\\n    }\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountOut) {\\n        IERC20(path[0]).transferFrom(msg.sender, address(this), amountIn);\\n        amountOut = getAmountOut(amountIn, amountOutMin, amountOutMin);\\n        IERC20(path[1]).transfer(msg.sender, amountOut);\\n    }\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amount) {\\n        IERC20(path[0]).transferFrom(msg.sender, address(this), amountInMax);\\n        amount = getAmountOut(amountInMax, amountOut, amountOut);\\n        IERC20(path[1]).transfer(msg.sender, amountOut);\\n    }\\n\\n    function getAmountOut(\\n        uint256 amountIn,\\n        uint256 reserveIn,\\n        uint256 reserveOut\\n    ) public pure returns (uint256) {\\n        return (amountIn * 99) / 100;\\n    }\\n}\\n\",\"keccak256\":\"0x2f977918ef203db4482b40e198b00092a8aa490f85381046a0273e7b764bf1c9\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040805180820190915260088082526765786368616e676560c01b602090920191825261004091600091610046565b50610119565b828054610052906100df565b90600052602060002090601f01602090048101928261007457600085556100ba565b82601f1061008d57805160ff19168380011785556100ba565b828001600101855582156100ba579182015b828111156100ba57825182559160200191906001019061009f565b506100c69291506100ca565b5090565b5b808211156100c657600081556001016100cb565b600181811c908216806100f357607f821691505b60208210810361011357634e487b7160e01b600052602260045260246000fd5b50919050565b61061f806101286000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063054d50d41461005157806306fdde031461007757806338ed17391461008c5780638803dbee1461009f575b600080fd5b61006461005f3660046103c7565b6100b2565b6040519081526020015b60405180910390f35b61007f6100d3565b60405161006e91906103f3565b61006461009a366004610464565b610161565b6100646100ad366004610464565b6102b9565b600060646100c1856063610506565b6100cb9190610533565b949350505050565b600080546100e090610555565b80601f016020809104026020016040519081016040528092919081815260200182805461010c90610555565b80156101595780601f1061012e57610100808354040283529160200191610159565b820191906000526020600020905b81548152906001019060200180831161013c57829003601f168201915b505050505081565b6000848460008181106101765761017661058f565b905060200201602081019061018b91906105a5565b6040516323b872dd60e01b8152336004820152306024820152604481018990526001600160a01b0391909116906323b872dd906064016020604051808303816000875af11580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020491906105c7565b506102108787886100b2565b9050848460018181106102255761022561058f565b905060200201602081019061023a91906105a5565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044015b6020604051808303816000875af115801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906105c7565b509695505050505050565b6000848460008181106102ce576102ce61058f565b90506020020160208101906102e391906105a5565b6040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c91906105c7565b506103688688896100b2565b90508484600181811061037d5761037d61058f565b905060200201602081019061039291906105a5565b60405163a9059cbb60e01b8152336004820152602481018990526001600160a01b03919091169063a9059cbb9060440161026b565b6000806000606084860312156103dc57600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b8181101561042057858101830151858201604001528201610404565b81811115610432576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461045f57600080fd5b919050565b60008060008060008060a0878903121561047d57600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156104a357600080fd5b818901915089601f8301126104b757600080fd5b8135818111156104c657600080fd5b8a60208260051b85010111156104db57600080fd5b6020830196508095505050506104f360608801610448565b9150608087013590509295509295509295565b600081600019048311821515161561052e57634e487b7160e01b600052601160045260246000fd5b500290565b60008261055057634e487b7160e01b600052601260045260246000fd5b500490565b600181811c9082168061056957607f821691505b60208210810361058957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156105b757600080fd5b6105c082610448565b9392505050565b6000602082840312156105d957600080fd5b815180151581146105c057600080fdfea26469706673582212200037307666bb5cebcc4af0771f6ee69f534f4134002fae59139cb8a1c076a09e64736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063054d50d41461005157806306fdde031461007757806338ed17391461008c5780638803dbee1461009f575b600080fd5b61006461005f3660046103c7565b6100b2565b6040519081526020015b60405180910390f35b61007f6100d3565b60405161006e91906103f3565b61006461009a366004610464565b610161565b6100646100ad366004610464565b6102b9565b600060646100c1856063610506565b6100cb9190610533565b949350505050565b600080546100e090610555565b80601f016020809104026020016040519081016040528092919081815260200182805461010c90610555565b80156101595780601f1061012e57610100808354040283529160200191610159565b820191906000526020600020905b81548152906001019060200180831161013c57829003601f168201915b505050505081565b6000848460008181106101765761017661058f565b905060200201602081019061018b91906105a5565b6040516323b872dd60e01b8152336004820152306024820152604481018990526001600160a01b0391909116906323b872dd906064016020604051808303816000875af11580156101e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020491906105c7565b506102108787886100b2565b9050848460018181106102255761022561058f565b905060200201602081019061023a91906105a5565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b03919091169063a9059cbb906044015b6020604051808303816000875af115801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906105c7565b509695505050505050565b6000848460008181106102ce576102ce61058f565b90506020020160208101906102e391906105a5565b6040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b0391909116906323b872dd906064016020604051808303816000875af1158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c91906105c7565b506103688688896100b2565b90508484600181811061037d5761037d61058f565b905060200201602081019061039291906105a5565b60405163a9059cbb60e01b8152336004820152602481018990526001600160a01b03919091169063a9059cbb9060440161026b565b6000806000606084860312156103dc57600080fd5b505081359360208301359350604090920135919050565b600060208083528351808285015260005b8181101561042057858101830151858201604001528201610404565b81811115610432576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461045f57600080fd5b919050565b60008060008060008060a0878903121561047d57600080fd5b8635955060208701359450604087013567ffffffffffffffff808211156104a357600080fd5b818901915089601f8301126104b757600080fd5b8135818111156104c657600080fd5b8a60208260051b85010111156104db57600080fd5b6020830196508095505050506104f360608801610448565b9150608087013590509295509295509295565b600081600019048311821515161561052e57634e487b7160e01b600052601160045260246000fd5b500290565b60008261055057634e487b7160e01b600052601260045260246000fd5b500490565b600181811c9082168061056957607f821691505b60208210810361058957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156105b757600080fd5b6105c082610448565b9392505050565b6000602082840312156105d957600080fd5b815180151581146105c057600080fdfea26469706673582212200037307666bb5cebcc4af0771f6ee69f534f4134002fae59139cb8a1c076a09e64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 14039,
        "contract": "src/mock/MockExchange.sol:Exchange",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}