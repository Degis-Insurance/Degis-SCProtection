{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa84f109c313836a2e2ab7f0a1a14502369d328ad07120a8eddf6a9ddb6cf8ba2",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "246791",
    "logsBloom": "0x
    "blockHash": "0x7ee60a00eb39f57ede4a21719305f4ee7681eacf24918b306d4b9da9e4ad582b",
    "transactionHash": "0xa84f109c313836a2e2ab7f0a1a14502369d328ad07120a8eddf6a9ddb6cf8ba2",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "246791",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "c5ac15ec9bf1ccc6a448dc6f0fd95e9a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/mock/MockExchange.sol\":\"MockExchange\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x0000000000000031363634303433393838363038\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"src/interfaces/IERC20Decimals.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\n\\npragma solidity ^0.8.13;\\n\\ninterface IERC20Decimals {\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x557bdcf137975d38a1b7104d1c13389324bd6b3ef8713a43b52b41200ce7700b\",\"license\":\"GPL-3.0-or-later\"},\"src/mock/MockExchange.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"../interfaces/IERC20Decimals.sol\\\";\\n\\ncontract MockExchange {\\n    constructor() {}\\n\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256 amountOut) {\\n        require(block.timestamp <= deadline);\\n\\n        IERC20(path[0]).transferFrom(msg.sender, address(this), amountIn);\\n\\n        // path[0] is native token with 18 decimals\\n        // path[1] is MockUSDC with 6 decimals\\n        uint256 decimalDiff = IERC20Decimals(path[0]).decimals() -\\n            IERC20Decimals(path[1]).decimals();\\n\\n        // E.g. amountIn = 1e18\\n        //      amountOut = 1e6\\n        amountOut = amountIn / 10**decimalDiff;\\n\\n        IERC20(path[1]).transfer(to, amountOut);\\n    }\\n}\\n\",\"keccak256\":\"0x0dbdd8598484576b656d11d70a349da2a09a536c4e66c83b13d37c3efd647233\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608080604052346100165761037f908161001c8239f35b600080fdfe608060408181526004908136101561001657600080fd5b6000803560e01c6338ed17391461002c57600080fd5b346102c45760a03660031901126102c45782359060443567ffffffffffffffff948582116102c057366023830112156102c057818101359586116102c0576024938483019036868960051b860101116102bc576001600160a01b03606435818116959193908690036102b85760843542116102b857891561025f578a846100b2836102c7565b166323b872dd60e01b82523387830152308a83015284604483015260209c8d91818b5a92606493f1801561029057918c6100f492879461029a575b50506102c7565b16908851998b8b878163313ce56760e01b968782525afa9a8b1561029057889b610271575b506001101561025f57604401988a846101318c6102c7565b1692868b518095819382525afa918215610255578792610221575b5060ff918216911681811061020f570360ff16604d81116101fd57600a0a9081156101eb576044926101848b9695938893049a6102c7565b16898951988996879563a9059cbb60e01b87528601528401525af19081156101e057506101b3575b5051908152f35b6101d290843d86116101d9575b6101ca81836102e0565b810190610318565b50386101ac565b503d6101c0565b8351903d90823e3d90fd5b634e487b7160e01b8652601284528686fd5b634e487b7160e01b8652601184528686fd5b634e487b7160e01b8752601185528787fd5b60ff91925061024682918d803d1061024e575b61023e81836102e0565b810190610330565b92915061014c565b503d610234565b89513d89823e3d90fd5b634e487b7160e01b8752603285528787fd5b610289919b508c8d3d1061024e5761023e81836102e0565b9938610119565b8a513d8a823e3d90fd5b816102b092903d106101d9576101ca81836102e0565b508c386100ed565b8680fd5b8480fd5b8280fd5b80fd5b356001600160a01b03811681036102db5790565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761030257604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126102db575180151581036102db5790565b908160209103126102db575160ff811681036102db579056fea26469706673582212200d13586f52657c2456267b06c5b8008cb30186ddb716fc24f2a2dd186d091b4064736f6c634300080f0033",
  "deployedBytecode": "0x608060408181526004908136101561001657600080fd5b6000803560e01c6338ed17391461002c57600080fd5b346102c45760a03660031901126102c45782359060443567ffffffffffffffff948582116102c057366023830112156102c057818101359586116102c0576024938483019036868960051b860101116102bc576001600160a01b03606435818116959193908690036102b85760843542116102b857891561025f578a846100b2836102c7565b166323b872dd60e01b82523387830152308a83015284604483015260209c8d91818b5a92606493f1801561029057918c6100f492879461029a575b50506102c7565b16908851998b8b878163313ce56760e01b968782525afa9a8b1561029057889b610271575b506001101561025f57604401988a846101318c6102c7565b1692868b518095819382525afa918215610255578792610221575b5060ff918216911681811061020f570360ff16604d81116101fd57600a0a9081156101eb576044926101848b9695938893049a6102c7565b16898951988996879563a9059cbb60e01b87528601528401525af19081156101e057506101b3575b5051908152f35b6101d290843d86116101d9575b6101ca81836102e0565b810190610318565b50386101ac565b503d6101c0565b8351903d90823e3d90fd5b634e487b7160e01b8652601284528686fd5b634e487b7160e01b8652601184528686fd5b634e487b7160e01b8752601185528787fd5b60ff91925061024682918d803d1061024e575b61023e81836102e0565b810190610330565b92915061014c565b503d610234565b89513d89823e3d90fd5b634e487b7160e01b8752603285528787fd5b610289919b508c8d3d1061024e5761023e81836102e0565b9938610119565b8a513d8a823e3d90fd5b816102b092903d106101d9576101ca81836102e0565b508c386100ed565b8680fd5b8480fd5b8280fd5b80fd5b356001600160a01b03811681036102db5790565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761030257604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126102db575180151581036102db5790565b908160209103126102db575160ff811681036102db579056fea26469706673582212200d13586f52657c2456267b06c5b8008cb30186ddb716fc24f2a2dd186d091b4064736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}